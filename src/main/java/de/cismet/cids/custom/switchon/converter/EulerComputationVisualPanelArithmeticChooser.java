/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.switchon.converter;

import org.openide.util.WeakListeners;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 * DOCUMENT ME!
 *
 * @author   jlauter
 * @version  $Revision$, $Date$
 */
public class EulerComputationVisualPanelArithmeticChooser extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient EulerComputationWizardPanelArithmeticChooser model;
    private final transient ItemListener chooseL;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboArithmeticChooser;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form EulerComputationVisualPanelArithmeticChooser.
     *
     * @param   model  DOCUMENT ME!
     *
     * @throws  IllegalStateException  DOCUMENT ME!
     */
    public EulerComputationVisualPanelArithmeticChooser(final EulerComputationWizardPanelArithmeticChooser model) {
        if (model == null) {
            throw new IllegalStateException("model instance must not be null"); // NOI18N
        }

        chooseL = new ItemListenerImpl();

        initComponents();

        this.setName(org.openide.util.NbBundle.getMessage(
                EulerComputationVisualPanelArithmeticChooser.class,
                "EulerComputationVisualPanelArithmeticChooser.this.name"));

        this.model = model;

        cboArithmeticChooser.addItemListener(WeakListeners.create(ItemListener.class, chooseL, cboArithmeticChooser));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    public void init() {
        if (cboArithmeticChooser.getItemCount() <= 0) {
            this.cboArithmeticChooser.removeAllItems();
            this.cboArithmeticChooser.addItem(EulerComputationUtil.EULER_TYPE_1_COMPUTATION);
            this.cboArithmeticChooser.addItem(EulerComputationUtil.EULER_TYPE_2_COMPUTATION);
            this.cboArithmeticChooser.setSelectedIndex(0);
        }
        final String arithmetic = model.getEulerArithmetic();
        if ((arithmetic == null) || arithmetic.isEmpty()) {
            model.setEulerArithmetic((String)cboArithmeticChooser.getSelectedItem());
        } else {
            cboArithmeticChooser.setSelectedItem(arithmetic);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        final java.awt.GridBagConstraints gridBagConstraints;

        cboArithmeticChooser = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        cboArithmeticChooser.setPreferredSize(new java.awt.Dimension(300, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(cboArithmeticChooser, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class ItemListenerImpl implements ItemListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void itemStateChanged(final ItemEvent e) {
            model.setEulerArithmetic((String)cboArithmeticChooser.getSelectedItem());
        }
    }
}
