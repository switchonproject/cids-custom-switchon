/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.switchon.data.io;

import org.openide.util.NbBundle;

import javax.swing.JFileChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * DOCUMENT ME!
 *
 * @author   bfriedrich
 * @version  $Revision$, $Date$
 */
public class VisualPanelChooseFileImport extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient WizardPanelChooseFileImport ctrl;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFileChooser;
    private javax.swing.JTextField txtFileChooser;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new VisualPanelChooseFile object.
     *
     * @param   ctrl  DOCUMENT ME!
     *
     * @throws  NullPointerException  DOCUMENT ME!
     */
    public VisualPanelChooseFileImport(final WizardPanelChooseFileImport ctrl) {
        if (ctrl == null) {
            throw new NullPointerException("Given WizardPanelChooseFile instance " // NOI18N
                        + "must not be null");          // NOI18N
        }

        initComponents();

        this.setName(NbBundle.getMessage(
                VisualPanelChooseFileImport.class,
                "VisualPanelChooseFile.this.name")); // NOI18N

        this.ctrl = ctrl;

        this.txtFileChooser.getDocument().addDocumentListener(new DocumentListener() {

                @Override
                public void insertUpdate(final DocumentEvent de) {
                    ctrl.fireChangeEvent();
                }

                @Override
                public void removeUpdate(final DocumentEvent de) {
                    ctrl.fireChangeEvent();
                }

                @Override
                public void changedUpdate(final DocumentEvent de) {
                    ctrl.fireChangeEvent();
                }
            });
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    public void init() {
        this.txtFileChooser.setText("");
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public String getFileName() {
        return this.txtFileChooser.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblFileChooser = new javax.swing.JLabel();
        txtFileChooser = new javax.swing.JTextField();
        btnFileChooser = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblFileChooser.setText(org.openide.util.NbBundle.getMessage(
                VisualPanelChooseFileImport.class,
                "VisualPanelChooseFileImport.lblFileChooser.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(lblFileChooser, gridBagConstraints);

        txtFileChooser.setText(org.openide.util.NbBundle.getMessage(
                VisualPanelChooseFileImport.class,
                "VisualPanelChooseFileImport.txtFileChooser.text")); // NOI18N
        txtFileChooser.setMinimumSize(new java.awt.Dimension(100, 27));
        txtFileChooser.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 4;
        jPanel1.add(txtFileChooser, gridBagConstraints);

        btnFileChooser.setText(org.openide.util.NbBundle.getMessage(
                VisualPanelChooseFileImport.class,
                "VisualPanelChooseFileImport.btnFileChooser.text")); // NOI18N
        btnFileChooser.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    btnFileChooserActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(btnFileChooser, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void btnFileChooserActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnFileChooserActionPerformed
        final JFileChooser chooser = new JFileChooser();
        final int returnVal = chooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.txtFileChooser.setText(chooser.getSelectedFile().getAbsolutePath());
            this.ctrl.fireChangeEvent();
        }
    } //GEN-LAST:event_btnFileChooserActionPerformed
}
