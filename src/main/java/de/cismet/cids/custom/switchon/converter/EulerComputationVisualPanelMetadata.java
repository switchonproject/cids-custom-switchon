/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.switchon.converter;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.awt.EventQueue;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * DOCUMENT ME!
 *
 * @author   jlauter
 * @version  $Revision$, $Date$
 */
public class EulerComputationVisualPanelMetadata extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private transient DocumentListener docL;
    private transient EulerComputationWizardPanelMetadata model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form EulerComputationVisualPanelMetadata.
     *
     * @param   model  DOCUMENT ME!
     *
     * @throws  IllegalStateException  DOCUMENT ME!
     */
    public EulerComputationVisualPanelMetadata(final EulerComputationWizardPanelMetadata model) {
        this.model = model;
        if (this.model == null) {
            throw new IllegalStateException("model instance must not be null");
        }

        docL = new DocumentListenerImpl();
        this.setName(NbBundle.getMessage(
                EulerComputationVisualPanelMetadata.class,
                "EulerComputationVisualPanelMetadata.this.name"));
        initComponents();

        txaDescription.setLineWrap(true);
        txaDescription.setWrapStyleWord(true);
        txtName.getDocument().addDocumentListener(WeakListeners.document(docL, txtName.getDocument()));
        txaDescription.getDocument().addDocumentListener(WeakListeners.document(docL, txaDescription.getDocument()));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    public void init() {
        txtName.setSelectionStart(0);
        txtName.setSelectionEnd(txtName.getText().length());

        EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    txtName.requestFocus();
                }
            });
        model.fireChangeEvent();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getSelectedName() {
        return txtName.getText();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getSelectedDescription() {
        return txaDescription.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        lblName.setText(org.openide.util.NbBundle.getMessage(
                EulerComputationVisualPanelMetadata.class,
                "EulerComputationVisualPanelMetadata.lblName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(lblName, gridBagConstraints);

        txtName.setText(org.openide.util.NbBundle.getMessage(
                EulerComputationVisualPanelMetadata.class,
                "EulerComputationVisualPanelMetadata.initComponents().txtName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(txtName, gridBagConstraints);

        lblDescription.setText(org.openide.util.NbBundle.getMessage(
                EulerComputationVisualPanelMetadata.class,
                "EulerComputationVisualPanelMetadata.lblDescription.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        add(lblDescription, gridBagConstraints);

        txaDescription.setColumns(20);
        txaDescription.setRows(5);
        jScrollPane1.setViewportView(txaDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jScrollPane1, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class DocumentListenerImpl implements DocumentListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void insertUpdate(final DocumentEvent de) {
            model.fireChangeEvent();
        }

        @Override
        public void removeUpdate(final DocumentEvent de) {
            model.fireChangeEvent();
        }

        @Override
        public void changedUpdate(final DocumentEvent de) {
            model.fireChangeEvent();
        }
    }
}
