/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.switchon.wizards.panels;

import Sirius.server.middleware.types.MetaObject;

import org.openide.util.Exceptions;

import de.cismet.cids.custom.switchon.gui.utils.QueryComboBox;

import de.cismet.cids.dynamics.CidsBean;
import de.cismet.cids.dynamics.CidsBeanStore;
import de.cismet.cids.dynamics.Disposable;

/**
 * DOCUMENT ME!
 *
 * @author   Gilles Baatz
 * @version  $Revision$, $Date$
 */
public class ContactInformationVisualPanel extends javax.swing.JPanel implements CidsBeanStore, Disposable {

    //~ Static fields/initializers ---------------------------------------------

    private static final transient org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(
            ContactInformationVisualPanel.class);

    //~ Instance fields --------------------------------------------------------

    private CidsBean contact;
    private CidsBean newlyCreatedContact;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNew;
    private javax.swing.JComboBox cmbContacts;
    private de.cismet.cids.custom.switchon.objecteditors.ContactEditor contactEditor;
    private de.cismet.cids.custom.switchon.gui.InfoBoxPanel infoBoxPanel;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AdditonalMetaDataContactInformationVisualPanel.
     */
    public ContactInformationVisualPanel() {
        initComponents();

        contactEditor.setInfoReceiver(infoBoxPanel);
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    public CidsBean getCidsBean() {
        return contact;
    }

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        contact = cidsBean;
        contactEditor.setCidsBean(contact);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        contactEditor = new de.cismet.cids.custom.switchon.objecteditors.ContactEditor();
        infoBoxPanel = new de.cismet.cids.custom.switchon.gui.InfoBoxPanel();
        btnNew = new javax.swing.JButton();
        cmbContacts = new QueryComboBox(
                "select id, organisation as name from contact order by organisation",
                false,
                "contact");
        ;

        addFocusListener(new java.awt.event.FocusAdapter() {

                @Override
                public void focusGained(final java.awt.event.FocusEvent evt) {
                    formFocusGained(evt);
                }
            });
        setLayout(new java.awt.GridBagLayout());

        contactEditor.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(contactEditor, gridBagConstraints);

        infoBoxPanel.setGeneralInformation(org.openide.util.NbBundle.getMessage(
                ContactInformationVisualPanel.class,
                "ContactInformationVisualPanel.infoBoxPanel.generalInformation")); // NOI18N
        infoBoxPanel.setMinimumSize(new java.awt.Dimension(134, 55));
        infoBoxPanel.setPreferredSize(new java.awt.Dimension(748, 55));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        add(infoBoxPanel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(
            btnNew,
            org.openide.util.NbBundle.getMessage(
                ContactInformationVisualPanel.class,
                "ContactInformationVisualPanel.btnNew.text")); // NOI18N
        btnNew.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    btnNewActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        add(btnNew, gridBagConstraints);

        cmbContacts.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    cmbContactsActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 10);
        add(cmbContacts, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void formFocusGained(final java.awt.event.FocusEvent evt) { //GEN-FIRST:event_formFocusGained
        infoBoxPanel.showGeneralInformation();
    }                                                                   //GEN-LAST:event_formFocusGained

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void cmbContactsActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_cmbContactsActionPerformed
        final Object selectedContact = cmbContacts.getSelectedItem();
        CidsBean selectContactBean = null;
        if (selectedContact instanceof MetaObject) {
            selectContactBean = ((MetaObject)selectedContact).getBean();
        } else if (selectedContact instanceof CidsBean) {
            selectContactBean = (CidsBean)selectedContact;
        }
        contact = selectContactBean;
        contactEditor.setCidsBean(selectContactBean);

        contactEditor.setEnabled(contact == newlyCreatedContact);
    } //GEN-LAST:event_cmbContactsActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void btnNewActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnNewActionPerformed
        if (newlyCreatedContact == null) {
            try {
                newlyCreatedContact = CidsBean.createNewCidsBeanFromTableName("SWITCHON", "contact");
                cmbContacts.addItem(newlyCreatedContact);
                cmbContacts.setSelectedItem(newlyCreatedContact);
            } catch (Exception ex) {
                LOG.error(ex, ex);
            }
        }
    }                                                                          //GEN-LAST:event_btnNewActionPerformed

    @Override
    public void dispose() {
        contactEditor.dispose();
    }
}
